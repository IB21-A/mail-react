{"version":3,"sources":["axios.js","API.js","hooks/useAuth.js","components/Navigation/Navigation.styles.js","components/Navigation/index.js","components/Mailbox/Mailbox.styles.js","components/MessageLine/MessageLine.styles.js","components/MessageLine/index.js","components/common/Spinner/index.js","components/common/Spinner/Spinner.styles.js","components/Mailbox/index.js","components/Compose/Compose.styles.js","components/getData.js","components/Compose/index.js","components/Email/Email.styles.js","components/Email/index.js","components/Login/Login.styles.js","components/Login/index.js","components/Logout/Logout.styles.js","components/Logout/index.js","components/Register/Register.styles.js","components/Register/index.js","globalstyle.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","axiosInstance","axios","create","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","a","error","originalRequest","config","alert","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","console","log","exp","post","refresh","then","setItem","access","defaults","catch","err","apiSettings","fetchMessages","mailbox","get","result","emails","fetchMessage","id","email","sendMessage","stringify","updateReadOrArchiveStatus","put","deleteMessage","delete","register","username","password","confirmation","message","res","login","user","jwtDecode","logout","removeItem","ex","getCurrentUser","jwt","authContext","createContext","ProvideAuth","children","auth","useState","setUser","API","getUser","useEffect","token","useProvideAuth","Provider","value","useAuth","useContext","Wrapper","styled","div","Navigation","setMailbox","redirectedMailbox","useLocation","state","length","className","Navbar","collapseOnSelect","expand","bg","variant","Container","Toggle","aria-controls","Nav","Brand","Collapse","Link","activeKey","pathname","props","read","Content","MessageLine","sender","subject","timestamp","handleClick","onClick","Spinner","Mailbox","useParams","navigate","useNavigate","loading","setLoading","setError","messages","setMessages","find","markAsRead","map","Component","Compose","recipients","setRecipients","setSubject","body","setBody","isPending","setIsPending","textareaRef","useRef","emailToRef","setCursorPosition","current","focus","setTimeout","setSelectionRange","formatSubject","replace","formatBody","doSubmit","e","preventDefault","Form","onSubmit","Group","controlId","size","Label","Control","ref","type","placeholder","onChange","target","name","as","rows","Button","disabled","Email","setRead","archived","setArchived","join","prevArchived","prevRead","Login","setUsername","setPassword","Text","Logout","Register","setData","schema","Joi","object","string","required","minDomainSegments","tlds","allow","min","validate","options","abortEarly","validated","errorObject","details","item","path","usernameError","handleChange","input","currentTarget","newData","GlobalStyle","createGlobalStyle","App","history","createBrowserHistory","exact","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27144cec.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"https://mail-thom.herokuapp.com/api/\";\n\nconst axiosInstance = axios.create({\n  baseURL: baseURL,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem(\"access_token\")\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\n      : null,\n    \"Content-Type\": \"application/json\",\n    accept: \"application/json\",\n  },\n});\n\naxiosInstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async function (error) {\n    const originalRequest = error.config;\n\n    if (typeof error.response === \"undefined\") {\n      alert(\n        \"A server/network error occurred. \" +\n          \"Looks like CORS might be the problem. \" +\n          \"Sorry about this - we will get it fixed shortly.\"\n      );\n      return Promise.reject(error);\n    }\n\n    if (\n      error.response.status === 401 &&\n      originalRequest.url === baseURL + \"token/refresh/\"\n    ) {\n      window.location.href = \"/login/\";\n      return Promise.reject(error);\n    }\n\n    if (\n      error.response.data.code === \"token_not_valid\" &&\n      error.response.status === 401 &&\n      error.response.statusText === \"Unauthorized\"\n    ) {\n      const refreshToken = localStorage.getItem(\"refresh_token\");\n\n      if (refreshToken) {\n        const tokenParts = JSON.parse(atob(refreshToken.split(\".\")[1]));\n\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\n        const now = Math.ceil(Date.now() / 1000);\n        console.log(tokenParts.exp);\n\n        if (tokenParts.exp > now) {\n          return axiosInstance\n            .post(\"/token/refresh/\", { refresh: refreshToken })\n            .then((response) => {\n              localStorage.setItem(\"access_token\", response.data.access);\n              localStorage.setItem(\"refresh_token\", response.data.refresh);\n\n              axiosInstance.defaults.headers[\"Authorization\"] =\n                \"JWT \" + response.data.access;\n              originalRequest.headers[\"Authorization\"] =\n                \"JWT \" + response.data.access;\n\n              return axiosInstance(originalRequest);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        } else {\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\n          window.location.href = \"/login/\";\n        }\n      } else {\n        console.log(\"Refresh token not available.\");\n        window.location.href = \"/login/\";\n      }\n    }\n\n    // specific error handling done elsewhere\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n","import axiosInstance from \"./axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiSettings = {\r\n  fetchMessages: async (mailbox) => {\r\n    const result = await axiosInstance.get(`/emails/${mailbox}/`);\r\n    const emails = result.data;\r\n    return emails;\r\n  },\r\n  // fetchMessages: async (mailbox, page) => {\r\n  // \tconst result = await axiosInstance.get(`/emails/${mailbox}/`);\r\n  // \tconst emails = result.data;\r\n  // \treturn emails;\r\n  // },\r\n  fetchMessage: async (id) => {\r\n    const result = await axiosInstance.get(`/emails/get/${id}/`);\r\n    const email = result.data;\r\n    return email;\r\n  },\r\n  sendMessage: async (email) => {\r\n    // axiosInstance.post(`emails/compose`, JSON.stringify(email))\r\n    // \t.then((response) => {\r\n    // \t\treturn response.status;\r\n    // \t});\r\n    return await (\r\n      await axiosInstance.post(`emails/compose/`, JSON.stringify(email))\r\n    ).status;\r\n  },\r\n  updateReadOrArchiveStatus: async (email) => {\r\n    return await await axiosInstance.put(\r\n      `emails/edit/${email.id}`,\r\n      JSON.stringify(email)\r\n    ).status;\r\n  },\r\n  deleteMessage: async (email) => {\r\n    return await axiosInstance.delete(`emails/delete/${email.id}`);\r\n  },\r\n  register: async (username, password) => {\r\n    const res = await axiosInstance\r\n      .post(`register/`, {\r\n        email: username,\r\n        password: password,\r\n        confirmation: password,\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n        return error.response.data.message;\r\n      });\r\n\r\n    // If registration works, log user in, else return error\r\n    if (res.status === 201) {\r\n      console.log(\"created user, attempting login\");\r\n      apiSettings.login(username, password);\r\n      return;\r\n    }\r\n\r\n    return res;\r\n  },\r\n  login: async (username, password) => {\r\n    try {\r\n      const res = await axiosInstance.post(`token/`, {\r\n        username: username,\r\n        password: password,\r\n      });\r\n      localStorage.setItem(\"access_token\", res.data.access);\r\n      localStorage.setItem(\"refresh_token\", res.data.refresh);\r\n      axiosInstance.defaults.headers[\"Authorization\"] =\r\n        \"JWT \" + localStorage.getItem(\"access_token\");\r\n\r\n      let user = jwtDecode(res.data.access);\r\n      // console.log(res);\r\n      window.location.href = \"/mailbox/inbox\";\r\n      return user;\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        console.log(ex.response.data);\r\n        console.log(\"login fail\");\r\n        return false;\r\n      }\r\n    }\r\n  },\r\n  logout: async () => {\r\n    try {\r\n      console.log(\"API logging out\");\r\n      localStorage.removeItem(\"access_token\");\r\n      localStorage.removeItem(\"refresh_token\");\r\n      window.location.href = \"/login\";\r\n    } catch (ex) {}\r\n  },\r\n  getCurrentUser: async () => {\r\n    try {\r\n      let jwt = await jwtDecode(localStorage.getItem(\"access_token\"));\r\n      console.log(\"current user:\" + jwt.username);\r\n      return jwt.username; // return username\r\n    } catch (ex) {}\r\n  },\r\n};\r\n\r\nexport default apiSettings;\r\n\r\n// try {\r\n// \tawait axiosInstance\r\n// \t\t.post(`token/`, {\r\n// \t\t\tusername: username,\r\n// \t\t\tpassword: password,\r\n// \t\t})\r\n// \t\t.then((res) => {\r\n// \t\t\tconsole.log(res);\r\n// \t\t\tlocalStorage.setItem(\"access_token\", res.data.access);\r\n// \t\t\tlocalStorage.setItem(\"refresh_token\", res.data.refresh);\r\n// \t\t\taxiosInstance.defaults.headers[\"Authorization\"] =\r\n// \t\t\t\t\"JWT \" + localStorage.getItem(\"access_token\");\r\n// \t\t\tconsole.log(\"success\");\r\n// \t\t\tlet result = jwtDecode(res.data.access);\r\n// \t\t\tconsole.log(result);\r\n// \t\t\t// window.location.href = \"/\";\r\n// \t\t\treturn result;\r\n// \t\t});\r\n// }\r\n","import React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport API from \"../API\";\r\n\r\nconst authContext = createContext();\r\n\r\nexport function ProvideAuth({ children }) {\r\n\tconst auth = useProvideAuth();\r\n\treturn <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\n// Hook for child components to get the auth object\r\n// and re-render when it changes\r\nexport const useAuth = () => {\r\n\treturn useContext(authContext);\r\n};\r\n\r\n// provider hook that creates auth object and handles state\r\nexport function useProvideAuth() {\r\n\tconst [user, setUser] = useState(null);\r\n\r\n\tconst login = async (username, password) => {\r\n\t\tconsole.log(\"useProvideAuth.login\"); // Debug output, delete\r\n\t\tconst user = await API.login(username, password);\r\n\t\tconsole.log(user);\r\n\t\tsetUser(user);\r\n\t\treturn user;\r\n\t};\r\n\r\n\tconst logout = async () => {\r\n\t\tconsole.log(\"useProvideAuth.logout\"); // Debug output, delete\r\n\t\tsetUser(null);\r\n\t\tAPI.logout();\r\n\t};\r\n\r\n\tconst getUser = async () => {\r\n\t\treturn await API.getCurrentUser();\r\n\t\t// if (user) {\r\n\t\t// \ttry {\r\n\t\t// \t\tconsole.log(\"try getUser\");\r\n\t\t// \t\treturn user;\r\n\t\t// \t} catch (ex) {\r\n\t\t// \t\tconsole.log(\"error decoding user\");\r\n\t\t// \t}\r\n\t\t// }\r\n\t\t// console.log(\"nouser\");\r\n\t\t// return null;\r\n\t};\r\n\t//\r\n\r\n\t// Subscribe to user on mount\r\n\t// Because this sets state in the callback it will cause any ...\r\n\t// ... component that utilizes this hook to re-render with the ...\r\n\t// ... latest auth object.\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tlet token = localStorage.getItem(\"access_token\");\r\n\t\t\t// if (token === null) {\r\n\t\t\t// \tsetUser(null);\r\n\t\t\t// \treturn;\r\n\t\t\t// }\r\n\t\t\tsetUser(jwtDecode(token));\r\n\t\t} catch (ex) {\r\n\t\t\tsetUser(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Cleanup subscription on unmount\r\n\t}, []);\r\n\r\n\treturn { user, login, logout, getUser };\r\n}\r\n","import styled from \"styled-components\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { screen } from \"@testing-library/react\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tmax-width: var(--maxWidth);\r\n\tmargin: 0 auto;\r\n\tpadding: 1em 0;\r\n\ttext-align: left;\r\n\r\n\tbutton {\r\n\t\tmargin-right: 1em;\r\n\t\tpadding: 0.3em 0.6em;\r\n\t}\r\n\r\n\t.active {\r\n\t\tcolor: #fff;\r\n\t\tbackground-color: #007bff;\r\n\t\tborder-color: #007bff;\r\n\t}\r\n\r\n\t.inactive {\r\n\t\tcolor: #007bff;\r\n\t\tbackground-color: transparent;\r\n\t\tbackground-image: none;\r\n\t\tborder-color: #007bff;\r\n\t}\r\n\r\n\t.inactive:hover {\r\n\t\tcolor: #fff;\r\n\t\tbackground-color: #007bff;\r\n\t\tborder-color: #007bff;\r\n\t}\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n// Styles\r\nimport { Wrapper } from \"./Navigation.styles\";\r\n// Bootstrap Component\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\n\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nconst Navigation = ({ mailbox, setMailbox }) => {\r\n\tconst auth = useAuth();\r\n\tconst user = auth.user;\r\n\r\n\tconst getButtonClasses = (buttonValue) => {\r\n\t\treturn mailbox == buttonValue ? \"primary btn-sm\" : \"outline-primary btn-sm\";\r\n\t};\r\n\r\n\tconst activeClassName = \"active\";\r\n\tconst className = \"inactive\";\r\n\r\n\t// hacky way to redirect to archive after archiving an email\r\n\tconst { state: redirectedMailbox } = useLocation();\r\n\tconst location = useLocation();\r\n\tuseEffect(() => {\r\n\t\tif (redirectedMailbox && redirectedMailbox.length > 0) {\r\n\t\t\tsetMailbox(redirectedMailbox);\r\n\t\t}\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Wrapper className=\"navigaton\">\r\n\t\t\t\t<Navbar collapseOnSelect expand=\"sm\" bg=\"primary\" variant=\"dark\">\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n\t\t\t\t\t\t{!user && (\r\n\t\t\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t\t\t<Navbar.Brand>Web Mail</Navbar.Brand>\r\n\r\n\t\t\t\t\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link href=\"/register\">Register</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link href=\"/login\">Login</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{user && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t\t\t\t\t\t<Nav className=\"me-auto\" activeKey={location.pathname}>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link href=\"/mailbox/inbox\">Inbox</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link href=\"/compose\">Compose</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link href=\"/mailbox/sent\">Sent</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link href=\"/mailbox/archive\">Archive</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t\t\t\t<Navbar.Brand>{user.username}</Navbar.Brand>\r\n\t\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link href=\"/logout\">Logout</Nav.Link>\r\n\t\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Navbar>\r\n\t\t\t</Wrapper>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Navigation;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tmax-width: var(--maxWidth);\r\n\tmargin: 0 auto;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\tborder: 1px solid black;\r\n\tpadding: 0.2rem;\r\n\tbackground-color: ${(props) => props.read && \"#c8c7c7\"};\r\n\t${\r\n\t\t\"\" /* width: 100%;\r\n\tflex-direction: row;\r\n\tjustify-content: space-between;\r\n\twidth: 100%; */\r\n\t}\r\n\r\n\t:hover {\r\n\t\tbackground-color: #007bff;\r\n\t\tborder-color: #007bff;\r\n\t\tcolor: #fff;\r\n\t}\r\n`;\r\nexport const Content = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: space-between;\r\n\twidth: 100%;\r\n\r\n\tdiv {\r\n\t\tmin-width: 0;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\r\n\t.sender {\r\n\t\tfont-weight: 500;\r\n\t\tmax-width: 30em;\r\n\t\tmin-width: 10em;\r\n\t}\r\n\r\n\t.subject {\r\n\t\ttext-align: left;\r\n\t\tjustify-content: flex-start;\r\n\t\twidth: auto;\r\n\t}\r\n\r\n\t@media screen and (max-width: 600px) {\r\n\t\t.timestamp {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\t.subject {\r\n\t\t\ttext-align: left;\r\n\t\t\tjustify-content: flex-start;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport { Wrapper, Content } from \"./MessageLine.styles\";\r\n\r\nconst MessageLine = ({ sender, subject, read, timestamp, handleClick, id }) => (\r\n\t<Wrapper read={read} onClick={() => handleClick(id)}>\r\n\t\t<Content>\r\n\t\t\t<div className=\"sender\">{sender}</div>\r\n\t\t\t<div className=\"subject\"> {subject}</div>\r\n\t\t\t<div className=\"timestamp\">{timestamp}</div>\r\n\t\t</Content>\r\n\t</Wrapper>\r\n);\r\n\r\nexport default MessageLine;\r\n","import { Spinner } from \"./Spinner.styles\";\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n\tborder: 5px solid var(--lightGrey);\r\n\tborder-top: 5px solid var(--darkGrey);\r\n\tborder-radius: 50%;\r\n\twidth: 50px;\r\n\theight: 50px;\r\n\tmargin: 20px auto;\r\n\r\n\tanimation: spin 0.8s linear infinite;\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n// styles\r\nimport { Wrapper } from \"./Mailbox.styles\";\r\n\r\n// components\r\nimport MessageLine from \"../MessageLine\";\r\nimport Spinner from \"../common/Spinner\";\r\n\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport API from \"../../API\";\r\n\r\nconst Mailbox = () => {\r\n\tlet { mailbox } = useParams();\r\n\tconst navigate = useNavigate();\r\n\tconst [currentMailbox, setCurrentMailbox] = useState(mailbox);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [messages, setMessages] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchMessages = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetError(false);\r\n\t\t\t\tsetLoading(true);\r\n\r\n\t\t\t\tconst emails = await API.fetchMessages(mailbox);\r\n\r\n\t\t\t\tsetMessages(emails);\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tsetError(true);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t};\r\n\t\tfetchMessages(mailbox);\r\n\t}, [mailbox]);\r\n\r\n\tconst handleClick = (id) => {\r\n\t\tconst email = messages.find((message) => message.id === id);\r\n\t\tmarkAsRead(email);\r\n\r\n\t\t// pass the selected message through state props into the read email component\r\n\t\tnavigate(\"/read\", { state: email });\r\n\t};\r\n\r\n\tfunction markAsRead(email) {\r\n\t\temail.read = true;\r\n\t\tAPI.updateReadOrArchiveStatus(email);\r\n\t}\r\n\t// TODO add pagination\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\tmessages.map((message) => (\r\n\t\t\t\t\t<MessageLine\r\n\t\t\t\t\t\tkey={message.id}\r\n\t\t\t\t\t\tid={message.id}\r\n\t\t\t\t\t\tsender={message.sender}\r\n\t\t\t\t\t\tsubject={message.subject}\r\n\t\t\t\t\t\tread={message.read}\r\n\t\t\t\t\t\ttimestamp={message.timestamp}\r\n\t\t\t\t\t\thandleClick={handleClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t\t{messages.length < 1 && (\r\n\t\t\t\t<div className=\"no-messages\">You have no {mailbox} messages.</div>\r\n\t\t\t)}\r\n\t\t</Wrapper>\r\n\t);\r\n\t// return (\r\n\t// \t<Wrapper>\r\n\t// \t\t{messages.map((message) => (\r\n\t//\r\n\t// \t\t\t<MessageLine\r\n\t// \t\t\t\tkey={message.id}\r\n\t// \t\t\t\tid={message.id}\r\n\t// \t\t\t\tsender={message.sender}\r\n\t// \t\t\t\tsubject={message.subject}\r\n\t// \t\t\t\tread={message.read}\r\n\t// \t\t\t\ttimestamp={message.timestamp}\r\n\t// \t\t\t\thandleClick={handleClick}\r\n\t// \t\t\t/>\r\n\t//\r\n\t// \t\t))}\r\n\t// \t</Wrapper>\r\n\t// );\r\n};\r\n\r\nexport default Mailbox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tmax-width: var(--maxWidth);\r\n\tmargin: 0 auto;\r\n\r\n\t.send-button {\r\n\t\ttext-align: right;\r\n\t}\r\n`;\r\n\r\n","import React, { Component } from \"react\";\r\nimport Home from \"./Home\";\r\nimport axiosInstance from \"../axios\";\r\n// import { getMessage } from \"./services/apiService\";\r\n// import { useMessageFetch } from \"../hooks/useMessageFetch\";\r\n\r\nclass GetData extends Component {\r\n\tstate = {\r\n\t\tmessage: \"\",\r\n\t\tuser: \"\",\r\n\t\temails: {},\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.login();\r\n\t}\r\n\t// const myMessage = getMessage();\r\n\t// console.log(message);\r\n\tgetMessage = async () => {\r\n\t\tconst apiRoute = \"http://127.0.0.1:8000/api/test\";\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(apiRoute);\r\n\t\t\tconst { message } = await response.json();\r\n\t\t\t// console.log(message);\r\n\t\t\tthis.setState( message );\r\n\t\t} catch (ex) {\r\n\t\t\tif (ex.response && ex.response.status === 400) {\r\n\t\t\t\tconsole.log(ex.response.data);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tgetMailBox = async () => {\r\n\t\ttry {\r\n\t\t\taxiosInstance.get(`/emails/inbox`).then((res) => {\r\n\t\t\t\t// console.log(res.data);\r\n\t\t\t\tthis.setState({ emails: res.data });\r\n\t\t\t});\r\n\t\t} catch (ex) {\r\n\t\t\tif (ex.response && ex.response.status === 400) {\r\n\t\t\t\tconsole.log(ex.response.data);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\ttest = async () => {\r\n\t\ttry {\r\n\t\t\taxiosInstance.get(`/user/show/`).then((res) => {\r\n\t\t\t\tconsole.log(res.data[\"Message\"]);\r\n\t\t\t\tthis.setState({ user: res.data[\"Message\"] });\r\n\t\t\t});\r\n\t\t} catch (ex) {\r\n\t\t\tif (ex.response && ex.response.status === 400) {\r\n\t\t\t\tconsole.log(ex.response.data);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tlogin = async () => {\r\n\t\r\n\t\t// const username = \"ib21@cs50.com\";\r\n\t\t// const password = \"a42d8c2019\";\r\n\t\tconst username = \"thom@cs50.com\";\r\n\t\tconst password = \"a42d8c2019\";\r\n\r\n\t\ttry {\r\n\t\t\taxiosInstance\r\n\t\t\t\t.post(`token/`, {\r\n\t\t\t\t\tusername: username,\r\n\t\t\t\t\tpassword: password,\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tlocalStorage.setItem(\"access_token\", res.data.access);\r\n\t\t\t\t\tlocalStorage.setItem(\"refresh_token\", res.data.refresh);\r\n\t\t\t\t\taxiosInstance.defaults.headers[\"Authorization\"] =\r\n\t\t\t\t\t\t\"JWT \" + localStorage.getItem(\"access_token\");\r\n\t\t\t\t});\r\n\r\n\t\t\t// const result = await fetch(apiRoute, {\r\n\t\t\t// \tmethod: \"POST\",\r\n\t\t\t// \t\"Content-Type\": \"application/json\",\r\n\t\t\t// \taccept: \"application/json\",\r\n\t\t\t// \tbody: JSON.stringify({ username, password }),\r\n\t\t\t// });\r\n\t\t\t// console.log(result.access);\r\n\t\t\t// console.log(result.refresh);\r\n\t\t} catch (ex) {\r\n\t\t\tif (ex.response && ex.response.status === 400) {\r\n\t\t\t\tconsole.log(ex.response.data);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{/* \"Hello\"\r\n\t\t\t\t<div>{this.state.message}</div>\r\n\t\t\t\t<div>{this.state.user}</div>\r\n\t\t\t\t<Home /> */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GetData;\r\n","import React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { Wrapper } from \"./Compose.styles\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nimport API from \"../../API\";\r\n\r\nimport Joi from \"joi\";\r\n\r\nconst blankEmail = {\r\n\tto: \"\",\r\n\tfrom: \"\",\r\n\tsubject: \"\",\r\n\tbody: \"\",\r\n};\r\n\r\nconst Compose = () => {\r\n\tconst [recipients, setRecipients] = useState(\"\");\r\n\tconst [subject, setSubject] = useState(\"\");\r\n\tconst [body, setBody] = useState(\"\");\r\n\tconst [isPending, setIsPending] = useState(false);\r\n\tconst navigate = useNavigate();\r\n\tconst { state: email } = useLocation();\r\n\tconst textareaRef = useRef();\r\n\tconst emailToRef = useRef();\r\n\r\n\t// const schema = {\r\n\t// \trecipients: Joi.string()\r\n\t// \t\t.required()\r\n\t// \t\t.email({ multiple: true })\r\n\t// \t\t.label(\"Recipients\"),\r\n\t// \tsubject: Joi.string().required(),\r\n\t// \tbody: Joi.string().required(),\r\n\t// };\r\n\r\n\tuseEffect(() => {\r\n\t\tconst populateReplyEmail = () => {\r\n\t\t\tsetRecipients(email.sender);\r\n\t\t\tsetSubject(formatSubject());\r\n\t\t\tsetBody(formatBody());\r\n\t\t\tsetCursorPosition();\r\n\t\t};\r\n\r\n\t\tconst setCursorPosition = () => {\r\n\t\t\t// set the cursor position above the reply text\r\n\t\t\ttextareaRef.current.focus();\r\n\r\n\t\t\tsetTimeout(() => textareaRef.current.setSelectionRange(0, 0), 100);\r\n\t\t};\r\n\r\n\t\tconst formatSubject = () => {\r\n\t\t\tconst re = /((re:*|Re:*|RE:*|re:*)+(\\s)*)+/;\r\n\t\t\treturn \"Re: \" + email.subject.replace(re, \"\");\r\n\t\t};\r\n\r\n\t\tconst formatBody = () => {\r\n\t\t\treturn `\\n\\nOn ${email.timestamp} ${email.sender} wrote:\\n${email.body}`;\r\n\t\t};\r\n\r\n\t\tif (email) {\r\n\t\t\tpopulateReplyEmail();\r\n\t\t} else {\r\n\t\t\temailToRef.current.focus();\r\n\t\t}\r\n\t}, [email]);\r\n\r\n\tconst doSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst email = { recipients, subject, body };\r\n\t\tsetIsPending(true);\r\n\t\ttry {\r\n\t\t\t// axiosInstance.post(`emails/compose`, JSON.stringify(email)).then(() => {\r\n\t\t\t// \tsetIsPending(false);\r\n\t\t\tconst status = await API.sendMessage(email);\r\n\t\t\tif (status === 201) {\r\n\t\t\t\tnavigate(\"/mailbox/inbox\");\r\n\t\t\t}\r\n\t\t} catch {\r\n\t\t\tconsole.log(\"error\");\r\n\t\t}\r\n\t\tsetIsPending(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Form onSubmit={doSubmit}>\r\n\t\t\t\t<Form.Group\r\n\t\t\t\t\tclassName=\"mb-3\"\r\n\t\t\t\t\tcontrolId=\"exampleForm.ControlInput1\"\r\n\t\t\t\t\tsize=\"lg\">\r\n\t\t\t\t\t<Form.Label>Email to:</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tref={emailToRef}\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"name@cs50.com\"\r\n\t\t\t\t\t\tvalue={recipients}\r\n\t\t\t\t\t\tonChange={(e) => setRecipients(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group\r\n\t\t\t\t\tclassName=\"mb-3\"\r\n\t\t\t\t\tcontrolId=\"exampleForm.ControlInput1\"\r\n\t\t\t\t\tsize=\"lg\">\r\n\t\t\t\t\t<Form.Label>Subject</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"subject\"\r\n\t\t\t\t\t\tname=\"subject\"\r\n\t\t\t\t\t\tvalue={subject}\r\n\t\t\t\t\t\tplaceholder=\"Subject\"\r\n\t\t\t\t\t\tonChange={(e) => setSubject(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n\t\t\t\t\t<Form.Label>Write your email here</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tref={textareaRef}\r\n\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\trows={10}\r\n\t\t\t\t\t\tvalue={body}\r\n\t\t\t\t\t\tonChange={(e) => setBody(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<div className=\"send-button\">\r\n\t\t\t\t\t{!isPending && (\r\n\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" onSubmit={doSubmit}>\r\n\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{isPending && (\r\n\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" disabled>\r\n\t\t\t\t\t\t\tSending...\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default Compose;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tmax-width: var(--maxWidth);\r\n\tmargin: 0 auto;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\t#message-body {\r\n\t\twhite-space: pre-wrap;\r\n\t}\r\n\r\n\t#option-buttons {\r\n\t\tmargin: 1rem 0;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\r\n\t\tButton + Button {\r\n\t\t\tmargin-left: 1rem;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Wrapper, Content } from \"./Email.styles\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nimport API from \"../../API\";\r\n\r\nconst Email = () => {\r\n  const navigate = useNavigate();\r\n  const { state: email } = useLocation();\r\n  const [read, setRead] = useState(email.read);\r\n  const [archived, setArchived] = useState(email.archived);\r\n\r\n  const toggleRead = () => {\r\n    email.read = !email.read;\r\n    setRead((prevRead) => !prevRead);\r\n    API.updateReadOrArchiveStatus(email);\r\n  };\r\n\r\n  // TODO toggle archive status\r\n  const handleArchive = () => {\r\n    email.archived = !email.archived;\r\n    setArchived((prevArchived) => !prevArchived);\r\n    API.updateReadOrArchiveStatus(email);\r\n\r\n    navigate(\"/mailbox/archive\");\r\n  };\r\n\r\n  // const handleArchive = () => {\r\n  // \tconst redirectedMailbox = \"archive\";\r\n  // \tnavigate(\"/\", { state: redirectedMailbox });\r\n  // \tconsole.log(\"redirect to archive\");\r\n  // \t// TODO add put request to archive message\r\n  // };\r\n\r\n  const handleReply = () => {\r\n    navigate(\"/compose\", { state: email });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    API.deleteMessage(email);\r\n    navigate(\"/mailbox/inbox\", { state: email });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {email && (\r\n        <Content>\r\n          <div id=\"sender\">From: {email.sender}</div>\r\n          <div id=\"recipients\">To: {email.recipients.join(\", \")}</div>\r\n          <div id=\"timestamp\">Time: {email.timestamp}</div>\r\n          <div id=\"subject\">Subject: {email.subject}</div>\r\n          <hr />\r\n          <div id=\"message-body\">{email.body}</div>\r\n          <div id=\"option-buttons\">\r\n            <div className=\"reply-button\">\r\n              <Button variant=\"outline-primary btn\" onClick={handleReply}>\r\n                Reply\r\n              </Button>\r\n            </div>\r\n            <div className=\"action-buttons\">\r\n              <Button variant=\"outline-danger btn-sm\" onClick={handleDelete}>\r\n                Delete\r\n              </Button>\r\n              <Button variant=\"outline-primary btn-sm\" onClick={handleArchive}>\r\n                {archived ? \"Unarchive\" : \"Archive\"}\r\n              </Button>\r\n              <Button variant=\"outline-primary btn-sm\" onClick={toggleRead}>\r\n                {read ? \"Mark Unread\" : \"Mark Read\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Content>\r\n      )}\r\n      {!email && navigate(\"/\")}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Email;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tmax-width: var(--maxWidth);\r\n\tmargin: 0 auto;\r\n`;\r\n","import React, { useState } from \"react\";\r\n// Styles\r\nimport { Wrapper } from \"./Login.styles\";\r\n// React components\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// helpers\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport API from \"../../API\";\r\n// hooks\r\nimport {useAuth} from '../../hooks/useAuth';\r\n\r\nconst Login = () => {\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState()\r\n    const navigate = useNavigate();\r\n    const auth = useAuth();\r\n\r\n\tconst doSubmit = async(e) => {\r\n        setError(false);\r\n        console.log('dosubmit');\r\n\t\te.preventDefault();\r\n        const user = await auth.login(username, password);\r\n        // const user = await API.login(username, password);\r\n\r\n        if (!user) {\r\n            setError(true);\r\n        }\r\n        \r\n\t};\r\n\r\n\r\n    // if (API.getCurrentUser()) { navigate('/')};\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<h1>Login</h1>\r\n\t\t\t<Form>\r\n\t\t\t\t{error && (\r\n\t\t\t\t\t<div className=\"error\">\r\n\t\t\t\t\t\tUsername or Password incorrect. Try again.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Username\"\r\n\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\tThe email address you are accessing\r\n\t\t\t\t\t</Form.Text>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Button variant=\"primary\" type=\"submit\" onClick={doSubmit}>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default Login;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tmax-width: var(--maxWidth);\r\n\tmargin: 0 auto;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\n// Styles\r\nimport { Wrapper } from \"./Logout.styles\";\r\n\r\n// hooks\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nconst Logout = () => {\r\n\tconst auth = useAuth();\r\n\tuseEffect(() => {\r\n\t\tauth.logout();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<div>Logging out...</div>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default Logout;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tmax-width: var(--maxWidth);\r\n\tmargin: 0 auto;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\n// Styles\r\nimport { Wrapper } from \"./Register.styles\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\n// helpers\r\nimport Joi from \"joi\";\r\n\r\n// hooks\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\n// API\r\nimport API from \"../../API\";\r\n\r\nconst Register = () => {\r\n\tconst [data, setData] = useState({ email: \"\", password: \"\" });\r\n\tconst [error, setError] = useState({});\r\n\r\n\tconst schema = Joi.object({\r\n\t\temail: Joi.string()\r\n\t\t\t.required()\r\n\t\t\t.email({ minDomainSegments: 2, tlds: { allow: [\"com\"] } }),\r\n\t\tpassword: Joi.string().required().min(5),\r\n\t});\r\n\r\n\tconst registerUser = async () => {\r\n\t\tconst res = await API.register(data.email, data.password);\r\n\t\tconsole.log(res.data);\r\n\t};\r\n\r\n\tconst validate = async () => {\r\n\t\tsetError({});\r\n\t\tconst options = { abortEarly: false };\r\n\t\tconst validated = schema.validate(data, options);\r\n\t\t// let errorList = errors.error.details;\r\n\t\tlet errorObject = {};\r\n\t\tif (validated.error) {\r\n\t\t\tvalidated.error.details.map((item) => {\r\n\t\t\t\terrorObject[item.path] = item.message;\r\n\t\t\t});\r\n\t\t\tsetError(errorObject);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst result = await API.register(data.email, data.password);\r\n\t\t\terrorObject.usernameError = result;\r\n\t\t\tsetError(errorObject);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t};\r\n\r\n\tconst handleChange = ({ currentTarget: input }) => {\r\n\t\tconst newData = { ...data };\r\n\t\tnewData[input.name] = input.value;\r\n\t\tsetData(newData);\r\n\t};\r\n\r\n\tconst doSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tvalidate();\r\n\t\t// console.log(errors);\r\n\t\treturn;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<h1>Register</h1>\r\n\t\t\t<Form>\r\n\t\t\t\t{/* {error && (\r\n\t\t\t\t\t<div className=\"error\">\r\n\t\t\t\t\t\tUsername or Password incorrect. Try again.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)} */}\r\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n\t\t\t\t\t{error.usernameError && (\r\n\t\t\t\t\t\t<div className=\"error\">{error.usernameError}</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Username\"\r\n\t\t\t\t\t\tvalue={data.email}\r\n\t\t\t\t\t\tonChange={(e) => handleChange(e)}\r\n\t\t\t\t\t\t// onChange={(e) => setUsername(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\tYour desired Email address\r\n\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t{error.email && (\r\n\t\t\t\t\t\t<div className=\"alert alert-danger\">{error.email}</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\tvalue={data.password}\r\n\t\t\t\t\t\tonChange={(e) => handleChange(e)}\r\n\t\t\t\t\t\t//onChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{error.password && (\r\n\t\t\t\t\t\t<div className=\"alert alert-danger\">{error.password}</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Button variant=\"primary\" type=\"submit\" onClick={(e) => doSubmit(e)}>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default Register;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    :root {\r\n        ${\"\" /* --maxWidth: 1280px; */}\r\n        --maxWidth: 1000px;\r\n        --lightGrey: #aaa;\r\n        --medGrey: #353535;\r\n        --darkGrey: #1c1c1c;\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    body {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    .error {\r\n\t\tcolor: red;\r\n\t\tfont-size: 1.1em;\r\n\t}\r\n\r\n    @media screen and (max-width: 1000px) {\r\n        body {\r\n            padding: 0 2em;\r\n        }\r\n    }\r\n`;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// styles\nimport \"./App.css\";\n\n// Hooks\nimport { createBrowserHistory } from \"history\";\nimport { ProvideAuth } from \"./hooks/useAuth\";\n\n// Components\nimport GetData from \"./components/getData\";\nimport Home from \"./components/Home\";\nimport Navigation from \"./components/Navigation\";\nimport Mailbox from \"./components/Mailbox\";\nimport Compose from \"./components/Compose\";\nimport Email from \"./components/Email\";\nimport Login from \"./components/Login\";\nimport Logout from \"./components/Logout\";\nimport Register from \"./components/Register\";\n\n// Styles\nimport { GlobalStyle } from \"./globalstyle\";\n\nfunction App() {\n\tconst history = createBrowserHistory();\n\t// const [currentEmail, setCurrentEmail] = useState();\n\n\treturn (\n\t\t<Router history={history}>\n\t\t\t{/* <GetData /> */}\n\t\t\t{/* <Home /> */}\n\t\t\t<ProvideAuth>\n\t\t\t\t<Navigation />\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route exact path=\"/register\" element={<Register />} />\n\t\t\t\t\t<Route exact path=\"/login\" element={<Login />} />\n\t\t\t\t\t<Route exact path=\"/logout\" element={<Logout />} />\n\t\t\t\t\t<Route exact path=\"/compose\" element={<Compose />} />\n\t\t\t\t\t<Route exact path=\"/read\" element={<Email />} />\n\t\t\t\t\t<Route exact path=\"/reply\" element={<Email />} />\n\t\t\t\t\t<Route exact path=\"/mailbox/:mailbox\" element={<Mailbox />} />\n\t\t\t\t</Routes>\n\t\t\t</ProvideAuth>\n\t\t\t<GlobalStyle />\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}